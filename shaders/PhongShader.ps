
// Light:
uniform vec4 lightDiffuseColor;
uniform vec4 ambient;

// Material:
uniform vec4 diffuse_color;

varying vec3 lightDir, eyeVec, normal;

void main()
{
	vec3 L = normalize(lightDir);
  vec3 N = normalize(normal);
	float diffuse = max(0.0, dot(N,L) );
	float specular = 0.0;

	if(diffuse > 0.0)
	{
		vec3 E = normalize(eyeVec);
		vec3 R = reflect(-L, N);
		specular = pow(clamp(dot(R, E), 0.0, 1.0), 16.0 );
	}

  gl_FragColor = ambient + diffuse * diffuse_color * lightDiffuseColor + specular * vec4(1.0,1.0,1.0,1.0);
  gl_FragColor.a = 1.0;
}
