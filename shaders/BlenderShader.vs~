#version 150

uniform mat4 ModelMatrix;
uniform mat4 ViewMatrix;
uniform mat4 ProjectionMatrix;
uniform mat3 NormalMatrix;
uniform vec3 LightPos; // directional light
uniform mat4 clippingMat; // uninverted view matrix

in vec3  vertexPosition, iNormal;
in vec2  iTexCoord;

out vec2 oTexCoord;
out vec3 normal, lightdir, eyeVec;
out vec3 interpolatedVertexEye;

void main(void)
{	
	normal = normalize( NormalMatrix * iNormal );

	interpolatedVertexEye = vec3( ModelMatrix * vec4(vertexPosition,1.0) );

	lightdir = LightPos; // - interpolatedVertexEye.xyz;
	eyeVec = -interpolatedVertexEye.xyz;

	oTexCoord = iTexCoord;

  gl_Position =  ProjectionMatrix * ViewMatrix * ModelMatrix * vec4(vertexPosition,1.0);
} 
 
