
#if defined( TEXTURE_2D )

varying vec3 position;
uniform sampler2D tex;

#else if defined( TEXTURE_CUBE )

uniform samplerCube gCubemapTexture;
varying vec3 viewDirection;

#endif

varying vec3 normal;

void main()
{
#if defined( TEXTURE_2D )
	vec2 texCoord2 = vec2( gl_FragCoord.x, gl_FragCoord.y )/vec2(1024.0,768.0);

	vec3 Refract = normalize(refract(position, normal, 1.40));
 
	gl_FragColor = texture2D(tex, texCoord2 + Refract.xy*0.1);

#else if defined( TEXTURE_CUBE )

  float refractiveIndex = 0.666;
  vec3 refractedDirection = normalize(
		 refract(normalize(viewDirection), 
     			   normalize(normal), refractiveIndex ));
  gl_FragColor = textureCube(gCubemapTexture, refractedDirection);

//	gl_FragColor = gl_FragColor * 0.0001 + textureCube(gCubemapTexture, re);
#endif
}
